name: measure_metrics.yml
on:
  push:
    branches:
      - main

jobs:
  analyze:
    name: Code Metrics Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install radon lizard pylint mccabe xenon pycodestyle cognitive-complexity cloc scc

      - name: Analyze with Radon
        run: |
          echo "=== Cyclomatic Complexity ===" > metrics_report.txt
          radon cc . --show-complexity --average >> metrics_report.txt || echo "Radon CC failed" >> metrics_report.txt

          printf "\n=== Maintainability Index ===\n" >> metrics_report.txt
          radon mi . --show >> metrics_report.txt || echo "Radon MI failed" >> metrics_report.txt

          printf "\n=== Raw Metrics ===\n" >> metrics_report.txt
          radon raw . --summary >> metrics_report.txt || echo "Radon RAW failed" >> metrics_report.txt

          printf "\n=== Halstead Metrics ===\n" >> metrics_report.txt
          radon hal . >> metrics_report.txt || echo "Radon Halstead failed" >> metrics_report.txt

      - name: Analyze with Lizard
        run: |
          printf "\n=== Detailed Code Metrics ===\n" >> metrics_report.txt
          lizard . --CCN 10 --length 100 --arguments 5 --extension duplicate --modified --working_threads 1 || true >> metrics_report.txt

      - name: Analyze with Pylint
        run: |
          printf "\n=== Code Quality Metrics ===\n" >> metrics_report.txt
          pylint --output-format=text . || true >> metrics_report.txt

      - name: Check complexity thresholds with Xenon
        run: |
          printf "\n=== Complexity Thresholds ===\n" >> metrics_report.txt
          xenon --max-absolute A --max-modules A --max-average A . || true >> metrics_report.txt

      - name: Generate detailed reports
        run: |
          mkdir -p metrics
          radon cc . --json > metrics/complexity.json || echo '{"error": "Radon CC failed"}' > metrics/complexity.json
          radon raw . --json > metrics/raw_metrics.json || echo '{"error": "Radon RAW failed"}' > metrics/raw_metrics.json
          radon hal . --json > metrics/halstead.json || echo '{"error": "Radon Halstead failed"}' > metrics/halstead.json
          lizard . --xml > metrics/lizard_report.xml || echo "<error>Lizard failed</error>" > metrics/lizard_report.xml
          cp metrics_report.txt metrics/full_report.txt

      - name: Upload metrics results
        uses: actions/upload-artifact@v4
        with:
          name: code-metrics
          path: metrics/
